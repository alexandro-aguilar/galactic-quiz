name: Development

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: us-east-1
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
  STAGE: ${{ vars.STAGE }}
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}

jobs:
  install:
    runs-on: ubuntu-latest
    environment:
      name: dev
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 22

    - name: Enable Corepack and activate Yarn
      run: |
        corepack enable
        corepack prepare yarn@4 --activate
    - name: Ensure Yarn cache directory exists
      run: mkdir -p .yarn/cache

    - name: Cache Yarn dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          .yarn/cache
          .yarn/unplugged
          .pnp.*
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install

  test:
    needs: install
    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 22

    - name: Enable Corepack and activate Yarn
      run: |
        corepack enable
        corepack prepare yarn@4 --activate

    - name: Restore Yarn cache
      uses: actions/cache@v3
      with:
        path: |
          .yarn/cache
          .yarn/unplugged
          .pnp.*
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies (Yarn v3)
      run: yarn install 

    - name: Run tests
      run: yarn test:unit --silent

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: dev

    permissions:
      id-token: write
      contents: read

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 22

    - name: Enable Corepack and activate Yarn
      run: |
        corepack enable
        corepack prepare yarn@4 --activate

    - name: Restore Yarn cache
      uses: actions/cache@v3
      with:
        path: |
          .yarn/cache
          .yarn/unplugged
          .pnp.*
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies (Yarn v3)
      run: yarn install 

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Get AWS Account ID
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        echo "AWS_ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV

    - name: Log AWS Account ID
      run: echo "AWS Account ID is $AWS_ACCOUNT_ID"

    - name: Build layers
      run: |
        ls
        mkdir -p iac/modules/layers/commonLayer/layer/nodejs
        cp -R package.json iac/modules/layers/commonLayer/layer/nodejs/package.json
        cp -R package-lock.json iac/modules/layers/commonLayer/layer/nodejs/yarn.lock
        cd iac/modules/layers/commonLayer/layer
        yarn workspaces focus --production

        # for layer in $(ls ../layers); do
        #   echo "Building layer $layer"
        #   cd $layer
        #   yarn install --production --frozen-lockfile
        #   zip -r ../$layer.zip .
        #   cd ..
        # done

    - name: Install AWS CDK
      run: |
        ls
        npm i -g aws-cdk

    - name: CDK synth
      run: cdk synth

    - name: Deploy CDK Stack
      run: cdk deploy --require-approval never